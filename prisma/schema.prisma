generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String        @id @default(uuid())
  username        String        @unique
  name            String
  email           String        @unique
  profilePicture  String
  password        String?
  role            UserRole      @default(user)
  provider        Provider      @default(email)
  refreshToken    String?
  refreshTokenExp DateTime?
  verifyToken     String?
  verifyTokenExp  DateTime?
  resetToken      String?
  resetTokenExp   DateTime?
  isDeleted       Boolean       @default(false)
  emailVerified   Boolean       @default(false)
  maxSessions     Int           @default(5)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  sessions        UserSession[]

  @@map("users")
}

model UserSession {
  id           String   @id @default(uuid())
  userId       String
  deviceId     String
  deviceName   String?
  deviceType   String?
  ipAddress    String
  userAgent    String
  location     String?
  refreshToken String   @unique
  accessToken  String?
  isActive     Boolean  @default(false)
  lastActivity DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  //relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([refreshToken])
  @@index([isActive])
  @@index([deviceId])
  @@map("user_sessions")
}

enum UserRole {
  user
  admin
  moderator
}

enum Provider {
  google
  github
  email
}
